grafana:
  enabled: {{ metrics_grafana_enabled | bool | lower }}
  adminPassword: "{{ metrics_grafana_password }}"
  ingress:
    enabled: {{ metrics_grafana_ingress_enabled | bool | lower }}
{% if metrics_grafana_ingress_enabled and metrics_grafana_ingress_hosts is defined %}
    hosts:
{% for h in metrics_grafana_ingress_hosts %}
      - {{ h }}
{% endfor %}
{% endif %}

prometheus:
  prometheusSpec:
    retention: {{ metrics_prometheus_retention }}
    scrapeInterval: {{ metrics_prometheus_scrape_interval }}
{% if metrics_prometheus_storage_class is defined and metrics_prometheus_storage_class %}
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: {{ metrics_prometheus_storage_class }}
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: {{ metrics_prometheus_storage_size }}
{% endif %}
    additionalScrapeConfigs:
      - job_name: kubernetes-pods-annotations
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: "true"
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: (.+):(?:\d+);(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod

alertmanager:
  enabled: {{ metrics_alertmanager_enabled | bool | lower }}

prometheus-node-exporter:
  tolerations:
    - key: ""
      operator: "Exists"
      effect: "NoExecute"
